<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
					    http://www.springframework.org/schema/beans/spring-beans.xsd
					    http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context.xsd
					    http://www.springframework.org/schema/aop 
					    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
					    http://www.springframework.org/schema/tx
        				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!--加载数据库的配置文件  -->
	<context:property-placeholder location="/src/main/webapp/WEB-INF/properties/db.properties"/>
	<!--数据源  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driver" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.userName}"/>
        <property name="password" value="${jdbc.password}"/>
	</bean>
	<!--获取sqlSessionFactory  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="src/main/webapp/WEB-INF/mybatis/configration.xml"></property>
	</bean>
	<!--mapper配置  根据mapper借口获取代理对象-->
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="net.codejava.springmvc.mapper.UserMapper"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>

	<!-- <context:annotation-config /> -->
	<context:component-scan base-package="net.codejava.springmvc">
		<context:include-filter type="assignable"
			expression="net.codejava.springmvc.test.Instrument" />
	</context:component-scan>

	<aop:config>
		<aop:aspect ref="audience">
			<aop:pointcut id="performance2" expression="execution(* net.codejava.springmvc.test.Performer.perform(..))   
				 and within(net.codejava.springmvc.test.*)"/>
			<aop:around pointcut-ref="performance2"
			method="watchPerformance"/>
		</aop:aspect>
	</aop:config>

</beans>
